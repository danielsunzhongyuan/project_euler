'''
Pentagonal numbers are generated by the formula, Pn=n(3n-1)/2.
The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8.
However, their difference, 70 - 22 = 48, is not pentagonal.
Find the pair of pentagonal numbers, Pj and Pk,
for which their sum and difference are pentagonal and D = |Pk - Pj| is minimised;
what is the value of D?
'''

import math
import time
import profile


def is_square_number(n):
    square = int(math.sqrt(n))
    return n == square**2


def is_pentagonal(n):
    return is_square_number(1+24*n) and (1+int(math.sqrt(1+24*n))) % 6 == 0


def main():
    '''sss'''
    start = time.time()
    print __doc__
    numbers = set([x*(3*x-1)/2 for x in xrange(1, 5000)])
    for i in numbers:
        for j in numbers:
            if (i+j) in numbers and abs(i-j) in numbers:
                print i, j, i-j

    print "It costs:", time.time() - start, "seconds"

if __name__ == "__main__":
    profile.run("main()")
